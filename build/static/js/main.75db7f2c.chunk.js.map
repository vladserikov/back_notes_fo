{"version":3,"sources":["components/Notes.jsx","sevices/notes.js","components/Notification.jsx","App.js","index.js"],"names":["Note","note","toggleImportant","label","important","className","content","onClick","axios","get","then","res","data","newObj","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","noteService","initialObj","catch","err","console","log","map","key","find","n","changeNote","returnNote","setTimeout","onSubmit","event","preventDefault","noteObj","date","Date","toISOString","Math","random","concat","value","onChange","e","target","type","ReactDOM","render","document","getElementById"],"mappings":"gPAYeA,G,MAVF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAkBC,M,gBCChC,EANA,kBAAMK,IAAMC,IAFd,cAE2BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAMzC,EAJA,SAAAC,GAAM,OAAIL,IAAMM,KAJlB,aAIgCD,GAAQH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAItD,EAFA,SAACG,EAAIF,GAAL,OAAgBL,IAAMQ,IAAN,UANlB,aAMkB,YAAwBD,GAAMF,GAAQH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCMtEK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAGP,yBAAKb,UAAU,SACVa,IC8EEC,EA/EH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,eAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,uBAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAMRC,EAAcJ,EAAUJ,EAAQA,EAAMS,QAAO,SAAA7B,GAAI,OAAIA,EAAKG,aAEhE2B,qBAAU,WACNC,IACKtB,MAAK,SAAAuB,GACFX,EAASW,MAEZC,OAAM,SAAAC,GACHC,QAAQC,IAAI,cACZD,QAAQC,IAAIF,QAErB,IAwCH,OACI,6BACI,qCAEA,kBAAC,EAAD,CAAcjB,QAASS,IAEvB,6BACI,4BAAQpB,QAAS,kBAAMmB,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BAbWI,EAAYS,KAAI,SAAArC,GAAI,OAAI,kBAAC,EAAD,CAAMsC,IAAKtC,EAAKc,GAAId,KAAMA,EAAMC,gBAAiB,kBAjBpE,SAAAa,GACpB,IAAMd,EAAOoB,EAAMmB,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAU,eAAOzC,EAAP,CAAaG,WAAYH,EAAKG,YAE9C4B,EAAmBjB,EAAI2B,GAClBhC,MAAK,SAAAiC,GACFrB,EAASD,EAAMiB,KAAI,SAAArC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO0C,SAEtDT,OAAM,SAAAC,GACHP,EAAgB,QAAD,OAAS3B,EAAKK,QAAd,yBACfsC,YAAW,WACPhB,EAAgB,QACjB,KACHN,EAASD,EAAMS,QAAO,SAAAW,GAAC,OAAIA,EAAE1B,KAAOA,SAIkDb,CAAgBD,EAAKc,WAgB/G,0BAAM8B,SApDE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAU,CACZ1C,QAASiB,EACT0B,MAAM,IAAIC,MAAOC,cACjB/C,UAAWgD,KAAKC,SAAW,IAG/BrB,EAAmBgB,GACdtC,MAAK,SAAAiC,GACFrB,EAASD,EAAMiC,OAAOX,IACtBnB,EAAW,SA0CX,2BAAO+B,MAAOhC,EAASiC,SAtCV,SAAAC,GACrBjC,EAAWiC,EAAEC,OAAOH,UAsCZ,4BAAQI,KAAK,UAAb,WC1EhBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.75db7f2c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportant }) => {\n    const label = note.important ? 'make not important' : 'make important'\n\n    return (\n        <li className=\"note\">\n            {note.content}\n            <button onClick={toggleImportant}>{label}</button>\n        </li>\n    )\n}\nexport default Note;","import axios from 'axios';\nconst baseUrl = `/api/notes`;\n\nconst getAll = () => axios.get(baseUrl).then(res => res.data)\n\nconst create = newObj => axios.post(baseUrl, newObj).then(res => res.data)\n\nconst update = (id, newObj) => axios.put(`${baseUrl}/${id}`, newObj).then(res => res.data)\n\nexport default {\n    getAll,\n    create,\n    update\n}","import React from 'react'\n\nconst Notification = ({message}) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Note from './components/Notes';\nimport noteService from './sevices/notes';\nimport Notification from './components/Notification';\n\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('new note...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState('some error happened')\n\n    const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n    useEffect(() => {\n        noteService.getAll()\n            .then(initialObj => {\n                setNotes(initialObj)\n            })\n            .catch(err => {\n                console.log('chec error');\n                console.log(err);\n            })\n    }, [])\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObj = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n        }\n\n        noteService.create(noteObj)\n            .then(returnNote => {\n                setNotes(notes.concat(returnNote))\n                setNewNote('')\n            })\n    }\n\n    const handleNoteChange = e => {\n        setNewNote(e.target.value)\n    }\n\n    const toggleImportant = id => {\n        const note = notes.find(n => n.id === id)\n        const changeNote = {...note, important: !note.important}\n\n        noteService.update(id, changeNote)\n            .then(returnNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnNote))\n            })\n            .catch(err => {\n                setErrorMessage(`Note ${note.content} removed from server`)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000);\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }\n\n    const rows = () => notesToShow.map(note => <Note key={note.id} note={note} toggleImportant={() => toggleImportant(note.id)}/>);\n\n    return (\n        <div>\n            <h1>Notes</h1>\n\n            <Notification message={errorMessage} />\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange}/>\n                <button type='submit'>save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}